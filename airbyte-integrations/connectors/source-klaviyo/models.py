# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2021-05-16T21:01:23+00:00

from __future__ import annotations

from typing import List, Optional, Union

from pydantic import BaseModel, Field


class SinceInteger(BaseModel):
    __root__: int


class SinceString(BaseModel):
    __root__: str


class Ascending(BaseModel):
    __root__: str = Field(..., example='asc', title='asc')


class Descending(BaseModel):
    __root__: str = Field(..., example='desc', title='desc')


class ReasonUnsubscribed(BaseModel):
    __root__: str = Field(..., example='unsubscribed', title='unsubscribed')


class ReasonBounced(BaseModel):
    __root__: str = Field(..., example='bounced', title='bounced')


class ReasonInvalidEmail(BaseModel):
    __root__: str = Field(..., example='invalid_email', title='invalid_email')


class ReasonReportedSpam(BaseModel):
    __root__: str = Field(..., example='reported_spam', title='reported_spam')


class ReasonManuallyExcluded(BaseModel):
    __root__: str = Field(..., example='manually_excluded', title='manually_excluded')


class StringArray(BaseModel):
    __root__: List[str]


class UnitDay(BaseModel):
    __root__: str = Field(..., example='day', title='day')


class UnitWeek(BaseModel):
    __root__: str = Field(..., example='week', title='week')


class UnitMonth(BaseModel):
    __root__: str = Field(..., example='month', title='month')


class MeasurementCount(BaseModel):
    __root__: str = Field(..., example='count', title='count')


class MeasurementUnique(BaseModel):
    __root__: str = Field(..., example='unique', title='unique')


class MeasurementValue(BaseModel):
    __root__: str = Field(..., example='value', title='value')


class MeasurementSum(BaseModel):
    __root__: str = Field(..., example='sum', title='sum')


class PrivacyEmail(BaseModel):
    email: Optional[str] = Field(None, example='abraham.lincoln@klaviyo.com')


class PrivacyPhone(BaseModel):
    phone_number: Optional[str] = Field(None, example='+13239169023')


class PrivacyId(BaseModel):
    person_id: Optional[str] = Field(None, example='PERSON_ID')


class Datum(BaseModel):
    object: Optional[str] = None
    id: Optional[str] = None
    type: Optional[str] = None
    created: Optional[str] = None
    updated: Optional[str] = None
    person_count: Optional[int] = None


class DeprecatedGetListResponse(BaseModel):
    object: Optional[str] = None
    start: Optional[int] = None
    end: Optional[int] = None
    page: Optional[int] = None
    size: Optional[int] = None
    total: Optional[int] = None
    data: Optional[List[Datum]] = Field(None, max_items=100, min_items=1)


class DeleteEmail(BaseModel):
    api_key: Optional[str] = Field(
        'PRIVATE_KEY', description='Private API Key', example='PRIVATE_KEY'
    )
    email: Optional[str] = Field(None, example='example@klaviyo.com')


class DeletePhone(BaseModel):
    api_key: Optional[str] = Field(
        'PRIVATE_KEY', description='Private API Key', example='PRIVATE_KEY'
    )
    phone_number: Optional[str] = Field(
        None, description='Phone Number', example='+13239169023'
    )


class DeletePerson(BaseModel):
    api_key: Optional[str] = Field(None, example='PRIVATE_KEY')
    person_id: Optional[str] = Field(None, example='PERSON_ID')


class Properties(BaseModel):
    _email: Optional[str] = Field(None, alias='$email')
    _first_name: Optional[str] = Field(None, alias='$first_name')
    _last_name: Optional[str] = Field(None, alias='$last_name')
    _phone_number: Optional[str] = Field(None, alias='$phone_number')
    _title: Optional[str] = Field(None, alias='$title')
    _organization: Optional[str] = Field(None, alias='$organization')
    _city: Optional[str] = Field(None, alias='$city')
    _region: Optional[str] = Field(None, alias='$region')
    _country: Optional[str] = Field(None, alias='$country')
    _zip: Optional[str] = Field(None, alias='$zip')
    _image: Optional[str] = Field(None, alias='$image')
    _consent: Optional[str] = Field(None, alias='$consent')
    YOUR_CUSTOM_FIELD: Optional[Union[str, int, float, bool, List]] = None


class IdentifyPayload(BaseModel):
    token: str
    properties: Properties


class CustomerProperties(BaseModel):
    _email: Optional[str] = Field(None, alias='$email')
    _phone_number: Optional[str] = Field(None, alias='$phone_number')


class Properties1(BaseModel):
    _event_id: Optional[str] = Field(None, alias='$event_id')
    _value: Optional[str] = Field(None, alias='$value')
    YOUR_CUSTOM_FIELD: Optional[Union[str, int, float, bool, List]] = None


class TrackPayload(BaseModel):
    token: str
    customer_properties: CustomerProperties
    properties: Properties1
    time: Union[str, int]


class Person(BaseModel):
    object: Optional[str] = Field(None, example='person')
    id: Optional[str] = Field(None, example='PERSON_ID')
    _email: Optional[str] = Field(
        None, alias='$email', example='george.washington@klaviyo.com'
    )
    _first_name: Optional[str] = Field(None, alias='$first_name', example='George')
    _last_name: Optional[str] = Field(None, alias='$last_name', example='Washington')
    _organization: Optional[str] = Field(
        None, alias='$organization', example='U.S. Government'
    )
    _title: Optional[str] = Field(None, alias='$title', example='President')
    _city: Optional[str] = Field(None, alias='$city', example='Mount Vernon')
    _region: Optional[str] = Field(None, alias='$region', example='Virginia')
    _zip: Optional[str] = Field(None, alias='$zip', example='22121')
    _country: Optional[str] = Field(None, alias='$country', example='United States')
    _timezone: Optional[str] = Field(None, alias='$timezone', example='US/Eastern')
    _phone_number: Optional[str] = Field(
        None, alias='$phone_number', example='+13239169023'
    )


class Integration(BaseModel):
    category: Optional[str] = None
    object: Optional[str] = None
    id: Optional[str] = None
    name: Optional[str] = None


class Metric(BaseModel):
    updated: Optional[str] = None
    name: Optional[str] = None
    created: Optional[str] = None
    object: Optional[str] = None
    id: Optional[str] = None
    integration: Optional[Integration] = None


class Datum1(BaseModel):
    date: Optional[str] = None
    values: Optional[List[float]] = None


class Result(BaseModel):
    segment: Optional[str] = None
    data: Optional[List[Datum1]] = None


class MetricExport(BaseModel):
    metric: Optional[Metric] = None
    end_date: Optional[str] = None
    measurement: Optional[str] = None
    where: Optional[str] = None
    start_date: Optional[str] = None
    unit: Optional[str] = None
    by: Optional[str] = None
    results: Optional[List[Result]] = None


class Person1(BaseModel):
    id: Optional[str] = None
    _email: Optional[str] = Field(None, alias='$email')


class Datum2(BaseModel):
    object: Optional[str] = None
    id: Optional[str] = None
    person: Optional[Person1] = None


class EventProperties(BaseModel):
    _value: Optional[float] = Field(None, alias='$value')
    items: Optional[List[Union[str, int, float, bool, List]]] = None


class MetricTimeline(BaseModel):
    count: Optional[int] = None
    object: Optional[str] = None
    data: Optional[List[Datum2]] = Field(None, max_items=100, min_items=1)
    event_name: Optional[str] = None
    statistic_id: Optional[str] = None
    timestamp: Optional[int] = None
    next: Optional[str] = None
    event_properties: Optional[EventProperties] = None


class Datum3(BaseModel):
    object: Optional[str] = Field(None, example='person')
    email: Optional[str] = Field(None, example='george.washington@klaviyo.com')
    date_added: Optional[str] = Field(None, example='2013-06-10 13:00:00')
    person: Optional[Person] = None


class CheckMembership(BaseModel):
    object: Optional[str] = Field(None, example='$list')
    start: Optional[int] = Field(None, example=0)
    end: Optional[int] = Field(None, example=1)
    page: Optional[int] = Field(None, example=0)
    page_size: Optional[int] = Field(None, example=1)
    total: Optional[int] = Field(None, example=1)
    data: Optional[List[Datum3]] = None


class Datum4(BaseModel):
    object: Optional[str] = Field(None, example='exclusion')
    email: Optional[str] = Field(None, example='george.washington@klaviyo.com')
    reason: Optional[str] = Field(None, example='unsubscribed')
    timestamp: Optional[str] = Field(None, example='2020-06-10 13:00:00')


class GlobalExclusionResponseData(BaseModel):
    object: Optional[str] = Field(None, example='$list')
    start: Optional[int] = Field(None, example=0)
    end: Optional[int] = Field(None, example=1)
    page: Optional[int] = Field(None, example=0)
    page_size: Optional[int] = Field(None, example=1)
    total: Optional[int] = Field(None, example=1)
    data: Optional[List[Datum4]] = None


class ListSubscribePostResponseDatum(BaseModel):
    id: Optional[str] = None
    email: Optional[str] = None
    phone_number: Optional[str] = None


class ListSubscribePostResponseData(BaseModel):
    __root__: List[ListSubscribePostResponseDatum] = Field(
        ...,
        example=[
            {'id': 'PERSON_ID_1', 'email': 'george.washington@klaviyo.com'},
            {
                'id': 'PERSON_ID_2',
                'email': 'thomas.jefferson@klaviyo.com',
                'phone_number': '+13239169023',
            },
        ],
        min_items=1,
    )


class Field200ok(BaseModel):
    pass


class Template(BaseModel):
    object: Optional[str] = Field(None, example='email-template')
    id: Optional[str] = Field(None, example='TEMPLATE_ID')
    html: Optional[str] = Field(
        None, example='<html><body><p>This is the email content</p></body></html>'
    )


class Campaign(BaseModel):
    object: Optional[str] = Field(None, example='campaign')
    id: Optional[str] = Field(None, example='CAMPAIGN_ID')
    name: Optional[str] = Field(None, example='Campaign Name')
    subject: Optional[str] = Field(None, example='Company Monthly Newsletter')
    from_email: Optional[str] = Field(None, example='george.washington@klaviyo.com')
    from_name: Optional[str] = Field(None, example='George Washington')
    list_id: Optional[str] = Field(None, example='erRoOX')
    template: Optional[Template] = None
    status: Optional[str] = Field(None, example='draft')
    sent_at: Optional[str] = Field(None, example='2020-12-02 18:45:04')
    created: Optional[str] = Field(None, example='2020-12-01 18:45:04')

{
  "openapi" : "3.0.3",
  "info" : {
    "version" : "1.0",
    "title" : "Klaviyo API",
    "description" : "Empowering creators to own their destiny",
    "x-logo" : {
      "url" : "https://ga0.imgix.net/logo/o/105931-1568037384-928126?auto=format&ch=Width%2CDPR&dpr=2.63&ixjsv=2.0.0&ixlib=rb-1.0.0&q=38&w=400"
    }
  },
  "servers" : [ {
    "description" : "Production",
    "url" : "https://a.klaviyo.com/api"
  } ],
  "tags" : [ {
    "name" : "Track & Identify",
    "description" : "create & update profiles, and track user activity"
  }, {
    "name" : "Metrics",
    "description" : "extract metric events data"
  }, {
    "name" : "Profiles",
    "description" : "read and update profiles"
  }, {
    "name" : "Lists & Segments",
    "description" : "read and update lists & segments"
  }, {
    "name" : "Data Privacy",
    "description" : "manage data privacy"
  }, {
    "name" : "Campaigns",
    "description" : "retrieve and update campaigns"
  }, {
    "name" : "Templates",
    "description" : "retrieve and update templates"
  } ],
  "paths" : {
    "/track" : {
      "get" : {
        "operationId" : "track",
        "summary" : "Track Profile Activity",
        "description" : "This endpoint is used to track when someone takes an action or does something. It encodes the following data in a JSON dictionary, that is then base64-encoded. NOTE: an account can have up to 200 unique metrics (event types).\n\n\n  **JSON DICTIONARY STRUCTURE:**\n\n  __token: *string*__\n  This is your public API key.\n  \n  __event: *string*__\n  Name of the event you want to track. \n  \n  __customer_properties: *optional; dictionary or null*__\n  Custom information about the person who did this event. You must identify the person by their email using a $email key (or by their phone number using a `$phone_number` key if you have SMS-only contacts). Other than that, you can include any data you want and it can then be used to create segments of people. For example, if you wanted to create a list of people on trial plans, include a person's plan type in this hash so you can use that information later.\n  \n  __properties: *optional; dictionary or null*__\n  Custom information about this event. Any properties included here can be used for creating segments later For example, if you track an event called \"Posted Item,\" you could include a property for item type (e.g. image, article, etc.).\n\n  __time: *optional; 10-digit UNIX timestamp or null*__\n  When this event occurred. By default, Klaviyo assumes events happen when a request is made. If you'd like to track an event that happened in past, use this property.\n  \n  \n  **SPECIAL FIELDS:**\n  \n  The Klaviyo CRM has the following special fields you can set for **customer_properties** with the **Track** endpoint, to unlock additional functionality:\n  \n  **$email:** _string_\n  **$first_name:** _string_\n  **$last_name:** _string_\n  **$phone_number:** _string; eg: \"+13239169023\"_\n  **$city:** _string_\n  **$region:** _string; state, or other region_\n  **$country:** _string_\n  **$zip:** _string_\n  **$image:** _string; url to a photo of a person_\n  **$consent:** _list of strings; eg: ['sms', 'email', 'web', 'directmail', 'mobile']_\n  \n  You can also set the following special fields in event **properties** with the **Track** endpoint:\n  \n  **$event_id:** _a unique identifier for an event_\n  **$value:** _a numeric value to associate with this event (e.g. the dollar value of a purchase)_\n  \n  **EXAMPLE:**\n  \n  ```\n  {\n    \"token\": \"PUBLIC_KEY\",\n    \"event\": \"OrderedItem\",\n    \"customer_properties\": {\n      \"$email\": \"abraham.lincoln@klaviyo.com\"\n    },\n    \"properties\": {\n      \"item_name\": \"Boots\",\n      \"$value\": 100\n    }\n  }\n\n  ```\n  Gets encoded into the following string, which is passed into the `data` parameter:\n\n  `eyJ0b2tlbiI6ICJQVUJMSUNfS0VZIiwiZXZlbnQiOiAiT3JkZXJlZEl0ZW0iLCJjdXN0b21lcl9wcm9wZXJ0aWVzIjogeyIkZW1haWwiOiAiYWJyYWhhbS5saW5jb2xuQGtsYXZpeW8uY29tIn0sInByb3BlcnRpZXMiOiB7Iml0ZW1fbmFtZSI6ICJCb290cyIsIiR2YWx1ZSI6IDEwMH19`\n",
        "parameters" : [ {
          "name" : "data",
          "required" : true,
          "in" : "query",
          "description" : "String representation of base64 encoded JSON dictionary",
          "schema" : {
            "type" : "string",
            "example" : "BASE_64_STRING",
            "default" : "BASE_64_STRING"
          }
        } ],
        "tags" : [ "Track & Identify" ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200ServerSide"
          }
        }
      }
    },
    "/identify" : {
      "get" : {
        "operationId" : "identify",
        "summary" : "Add or Update Profile",
        "description" : "This endpoint is used to track properties about an individual without tracking an associated event. It encodes the following data in a JSON dictionary, that is then base64-encoded.\n\n\n  **JSON DICTIONARY STRUCTURE:**\n\n  __token: *string*__\n  This is your public API key.\n  \n  __properties: *optional; dictionary or null*__\n  Custom information about the person who did this event. You must identify the person by their email using a $email key (or by their phone number using a `$phone_number` key if you have SMS-only contacts). Other than that, you can include any data you want and it can then be used to create segments of people. For example, if you wanted to create a list of people on trial plans, include a person's plan type in this hash so you can use that information later.\n  \n  \n  **SPECIAL FIELDS:**\n\n  The Klaviyo CRM has the following special fields you can set for customer **properties** with the **Identify** endpoint, to unlock additional functionality:\n  \n  **$email:** _string_\n  **$first_name:** _string_\n  **$last_name:** _string_\n  **$phone_number:** _string; eg: \"+13239169023\"_\n  **$city:** _string_\n  **$region:** _string; state, or other region_\n  **$country:** _string_\n  **$zip:** _string_\n  **$image:** _string; url to a photo of a person_\n  **$consent:** _list of strings; eg: ['sms', 'email', 'web', 'directmail', 'mobile']_\n  \n  \n  **EXAMPLE:**\n  \n  ```\n  {\n      \"token\": \"PUBLIC_KEY\",\n      \"properties\": {\n        \"$email\": \"abraham.lincoln@klaviyo.com\",\n        \"$first_name\": \"Abraham\",\n        \"$last_name\": \"Lincoln\",\n        \"$city\": \"Springfield\",\n        \"$region\": \"Illinois\"\n      }\n  }\n  ```\n  Gets encoded into the following string, which is passed into the `data` parameter:\n\n  `eyJ0b2tlbiI6ICJQVUJMSUNfS0VZIiwicHJvcGVydGllcyI6IHsiJGVtYWlsIjogImFicmFoYW0ubGluY29sbkBrbGF2aXlvLmNvbSIsIiRmaXJzdF9uYW1lIjogIkFicmFoYW0iLCIkbGFzdF9uYW1lIjogIkxpbmNvbG4iLCIkY2l0eSI6ICJTcHJpbmdmaWVsZCIsIiRyZWdpb24iOiAiSWxsaW5vaXMifX0K`\n\n  \n",
        "parameters" : [ {
          "name" : "data",
          "required" : true,
          "in" : "query",
          "description" : "String representation of base64 encoded JSON dictionary",
          "schema" : {
            "type" : "string",
            "example" : "BASE_64_STRING",
            "default" : "BASE_64_STRING"
          }
        } ],
        "tags" : [ "Track & Identify" ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200ServerSide"
          }
        }
      }
    },
    "/v1/metrics" : {
      "get" : {
        "operationId" : "get-metrics",
        "summary" : "Get Metrics Info",
        "description" : "Returns a list of all the metrics in your account.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "For pagination, which page of results to return. Default = 0",
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "example" : 0,
            "default" : 0
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "For pagination, the number of results to return. Default = 50 ; Max = 100",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 100,
            "example" : 50,
            "default" : 50
          }
        } ],
        "tags" : [ "Metrics" ],
        "responses" : {
          "200" : {
            "description" : "A dictionary with a data property that contains an array of all the metrics. Each entry is a separate metric object. If no metrics exist, the resulting array will be empty. This request should never return an error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "end" : {
                      "type" : "integer"
                    },
                    "object" : {
                      "type" : "string"
                    },
                    "page_size" : {
                      "type" : "integer"
                    },
                    "start" : {
                      "type" : "integer"
                    },
                    "total" : {
                      "type" : "integer"
                    },
                    "data" : {
                      "type" : "array",
                      "minItems" : 1,
                      "maxItems" : 100,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "updated" : {
                            "type" : "string"
                          },
                          "name" : {
                            "type" : "string"
                          },
                          "created" : {
                            "type" : "string"
                          },
                          "object" : {
                            "type" : "string"
                          },
                          "id" : {
                            "type" : "string"
                          },
                          "integration" : {
                            "type" : "object",
                            "properties" : {
                              "category" : {
                                "type" : "string"
                              },
                              "object" : {
                                "type" : "string"
                              },
                              "id" : {
                                "type" : "string"
                              },
                              "name" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example" : {
                    "end" : 0,
                    "object" : "$list",
                    "page_size" : 1,
                    "start" : 0,
                    "total" : 1,
                    "data" : [ {
                      "updated" : "2020-11-03 17:28:09",
                      "name" : "Active on Site",
                      "created" : "2020-11-03 17:28:09",
                      "object" : "metric",
                      "id" : "METRIC_ID",
                      "integration" : {
                        "category" : "API",
                        "object" : "integration",
                        "id" : "INTEGRATION_ID",
                        "name" : "API"
                      }
                    } ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/metrics/timeline" : {
      "get" : {
        "operationId" : "metrics-timeline",
        "summary" : "Get Events for All Metrics",
        "description" : "Returns a batched timeline of all events in your account.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Either a 10-digit Unix timestamp (UTC) to use as starting datetime, OR a UUID obtained from the next attribute of a prior API call. Defaults to current time.",
          "schema" : {
            "type" : "string",
            "example" : ""
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of events to return in a batch. Default = 50, Max = 100",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 100,
            "example" : 50,
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order to apply to timeline, either descending or ascending. Valid values are `desc` or `asc`. Defaults to `desc`. Always descending when `since` is not sent, as `since` defaults to current time.",
          "schema" : {
            "type" : "string",
            "example" : "desc",
            "default" : "desc"
          }
        } ],
        "tags" : [ "Metrics" ],
        "responses" : {
          "200" : {
            "description" : "A dictionary containing a list of metric event objects. Each event object contains information about what metric the event tracks, which person the event is related to, and any extra properties about the event. The next attribute should be passed as the since parameter to subsequent API calls to fetch the next batch of events.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/metric_timeline"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metric/{metric_id}/timeline" : {
      "get" : {
        "operationId" : "metric-timeline",
        "summary" : "Get Events for a Specific Metric",
        "description" : "Returns a batched timeline for one specific metric.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "metric_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "METRIC_ID",
            "default" : "METRIC_ID"
          }
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Either a 10-digit Unix timestamp (UTC) to use as starting datetime, OR a UUID obtained from the `next` attribute of a prior API call. Defaults to current time.",
          "schema" : {
            "type" : "string",
            "example" : ""
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of events to return in a batch. Max = 100",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 100,
            "example" : 100,
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order to apply to timeline, either descending or ascending. Valid values are `desc` or `asc`. Defaults to `desc`. Always descending when `since` is not sent, as `since` defaults to current time.",
          "schema" : {
            "type" : "string",
            "example" : "desc",
            "default" : "desc"
          }
        } ],
        "tags" : [ "Metrics" ],
        "responses" : {
          "200" : {
            "description" : "A dictionary containing a list of metric event objects. Each event object contains information about what metric the event tracks, which person the event is related to, and any extra properties about the event. The next attribute should be passed as the since parameter to subsequent API calls to fetch the next batch of events. If there are no more pages of events, `next` = `null`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/metric_timeline"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metric/{metric_id}/export" : {
      "get" : {
        "operationId" : "metric-export",
        "summary" : "Query Event Data",
        "description" : "Exports event data from Klaviyo, optionally filtering and segmenting on available event properties. To ensure a correct response, enter parameters in the curl request as they are ordered below:",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "metric_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "METRIC_ID",
            "default" : "METRIC_ID"
          }
        }, {
          "name" : "start_date",
          "required" : false,
          "in" : "query",
          "description" : "\nBeginning of timeframe to pull event data for. The default value is 1 month ago. Can also accept a 10-digit UNIX timestamp. When sending a `start_date`, you must also send an `end_date`\n\nEx: `1610524800` OR `2021-01-13`\n",
          "schema" : {
            "type" : "string",
            "example" : ""
          }
        }, {
          "name" : "end_date",
          "required" : false,
          "in" : "query",
          "description" : "\nEnd of timeframe to pull event data for. The default is the current day, or 1 month from start_date, whichever is sooner. Can also accept a 10-digit UNIX timestamp. When sending an `end_date`, you must also send a `start_date`. Must be *at most* 31 days after `start_date`\n\nEx: `1612080000` OR `2021-01-31`\n",
          "schema" : {
            "type" : "string",
            "example" : ""
          }
        }, {
          "name" : "unit",
          "required" : false,
          "in" : "query",
          "description" : "Granularity to bucket data points into - one of `day`, `week`, or `month`. Defaults to `day`.",
          "schema" : {
            "type" : "string",
            "example" : "day",
            "default" : "day"
          }
        }, {
          "name" : "measurement",
          "required" : false,
          "in" : "query",
          "description" : "\nType of metric to fetch - one of `unique`, `count`, `value`, or `sum`. Defaults to `count`. For `sum` a property name to operate on must be supplied as a JSON-encoded list like `[\"sum\",\"ItemCount\"]`\n",
          "schema" : {
            "type" : "string",
            "example" : "count",
            "default" : "count"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "Optional, JSON-encoded list. Conditions to use to filter the set of events. A max of 1 condition can be given. `where` and `by` parameters cannot be specified at the same time.\n\nex: `[[\"$attributed_flow\",\"=\",\"FLOW_ID\"]]`\n",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "[[\"$attributed_flow\",\"=\",\"FLOW_ID\"]]"
          }
        }, {
          "name" : "by",
          "in" : "query",
          "description" : "The name of a property to segment the event data on. `where` and `by` parameters cannot be specified at the same time. Cannot be used alongside `where` parameter.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "$attributed_flow"
          }
        }, {
          "name" : "count",
          "in" : "query",
          "required" : false,
          "description" : "Maximum number of segments to return. Default = 25",
          "schema" : {
            "type" : "integer",
            "default" : 25,
            "example" : 25,
            "minimum" : 1
          }
        } ],
        "tags" : [ "Metrics" ],
        "responses" : {
          "200" : {
            "description" : "A dictionary relecting the input request parameters as well as a results property that contains a list of dictionaries - one per segment of the result set. Within each of those dictionaries is the name of the segment as well as a data property that is a list of the data points for that segment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/metric_export"
                }
              }
            }
          }
        }
      }
    },
    "/v1/person/{person_id}" : {
      "get" : {
        "operationId" : "get-profile",
        "summary" : "Get Profile",
        "description" : "Retrieves all the data attributes for a person, based on the Klaviyo Person ID.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY",
            "description" : "Private API Key"
          }
        }, {
          "name" : "person_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "PERSON_ID",
            "default" : "PERSON_ID"
          }
        } ],
        "tags" : [ "Profiles" ],
        "responses" : {
          "200" : {
            "description" : "Returns a Person object. Any attributes that start with '$' are special Klaviyo attributes. With the exception of 'id' and 'object', any attributes that do no start with '$' are your custom-defined attributes. Only returns fields that are defined for given profile.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/person"
                }
              }
            }
          }
        }
      },
      "put" : {
        "operationId" : "update-profile",
        "summary" : "Update Profile",
        "description" : "NOTE: If you are interested in creating or updating profiles in Klaviyo, you should be using the Identify API instead. The best use-case for this route is changing a profiles's email address or other primary identifier after a profile already exists in Klaviyo.\n\nAdd or update one more more attributes for a Person, based on the Klaviyo Person ID. If a property already exists, it will be updated. If a property is not set for that record, it will be created.\n\nYou can update any attribute, by sending one or more attributes along their new values, as query parameters. Recommended attributes for this endpoint: `$email`, `$phone_number`, `$id`\n",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY",
            "description" : "Private API Key"
          }
        }, {
          "name" : "person_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "PERSON_ID",
            "default" : "PERSON_ID"
          }
        }, {
          "in" : "query",
          "name" : "params",
          "schema" : {
            "type" : "object",
            "minProperties" : 1,
            "maxProperties" : 3,
            "additionalProperties" : {
              "type" : "string"
            },
            "default" : {
              "$email" : "george.washington@klaviyo.com",
              "$phone_number" : 13239169023,
              "$id" : "EXTERNAL_ID"
            },
            "example" : {
              "$email" : "george.washington@klaviyo.com",
              "$phone_number" : 13239169023,
              "$id" : "EXTERNAL_ID"
            }
          },
          "style" : "form",
          "explode" : true
        } ],
        "tags" : [ "Profiles" ],
        "responses" : {
          "200" : {
            "description" : "Returns an updated Person object. Any attributes that start with $ are special Klaviyo attributes. With the exception of id and object, any attributes that do not start with $ are your custom properties.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/person"
                }
              }
            }
          }
        }
      }
    },
    "/v1/person/{person_id}/metrics/timeline" : {
      "get" : {
        "operationId" : "profile-metrics-timeline",
        "summary" : "Get Profile's Events for all Metrics",
        "description" : "Returns a batched timeline of all events for a person.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY",
            "description" : "Private API Key"
          }
        }, {
          "name" : "person_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "PERSON_ID",
            "default" : "PERSON_ID"
          }
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Either a 10-digit Unix timestamp (UTC) to use as starting datetime, OR a UUID obtained from the next attribute of a prior API call. Defaults to current time.",
          "schema" : {
            "type" : "string",
            "example" : ""
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of events to return in a batch. Default = 50, Max = 100",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 100,
            "default" : 50,
            "example" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order to apply to timeline, either descending or ascending. Valid values are `desc` or `asc`. Defaults to `desc`. Always descending when `since` is not sent, as `since` defaults to current time.",
          "schema" : {
            "type" : "string",
            "example" : "desc",
            "default" : "desc"
          }
        } ],
        "tags" : [ "Profiles" ],
        "responses" : {
          "200" : {
            "description" : "A dictionary containing a list of metric event objects. Each event object contains information about what metric the event tracks, which person the event is related to, and any extra properties about the event. The next attribute should be passed as the since parameter to subsequent API calls to fetch the next batch of events.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/metric_timeline"
                }
              }
            }
          }
        }
      }
    },
    "/v1/person/{person_id}/metric/{metric_id}/timeline" : {
      "get" : {
        "operationId" : "profile-metric-timeline",
        "summary" : "Get Profile's Events for a Specific Metric",
        "description" : "Returns a person's batched timeline for one specific event type.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "person_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "PERSON_ID",
            "default" : "PERSON_ID"
          }
        }, {
          "name" : "metric_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "METRIC_ID",
            "default" : "METRIC_ID"
          }
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Either a 10-digit Unix timestamp (UTC) to use as starting datetime, OR a UUID obtained from the next attribute of a prior API call. Defaults to current time.",
          "schema" : {
            "type" : "string",
            "example" : ""
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of events to return in a batch.",
          "schema" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 100,
            "default" : 50,
            "example" : 100
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order to apply to timeline, either descending or ascending. Valid values are `desc` or `asc`. Defaults to `desc`.",
          "schema" : {
            "type" : "string",
            "example" : "desc",
            "default" : "desc"
          }
        } ],
        "tags" : [ "Profiles" ],
        "responses" : {
          "200" : {
            "description" : "A dictionary containing a list of metric event objects. Each event object contains information about what metric the event tracks, which person the event is related to, and any extra properties about the event. The next attribute should be passed as the since parameter to subsequent API calls to fetch the next batch of events.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/metric_timeline"
                }
              }
            }
          }
        }
      }
    },
    "/v1/segment/{segment_id}/members" : {
      "get" : {
        "operationId" : "get-segment-members",
        "summary" : "Check if Profiles Are in a Segment",
        "description" : "Checks if one or more emails are in a given segment. No distinction is made between a person not being in a given segment, and not being present in Klaviyo at all. Can check up to a maximum of 100 emails at a time.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "segment_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "SEGMENT_ID",
            "default" : "SEGMENT_ID"
          }
        }, {
          "name" : "email",
          "required" : true,
          "in" : "query",
          "description" : "\nA single email address or JSON-encoded list of email addresses to look for in the specified segment.\nEx: `george.washington@klaviyo.com,thomas.jefferson@klaviyo.com`\n",
          "schema" : {
            "type" : "string",
            "default" : "george.washington@klaviyo.com,thomas.jefferson@klaviyo.com"
          },
          "examples" : {
            "single" : {
              "summary" : "single",
              "value" : "george.washington@klaviyo.com"
            },
            "multiple" : {
              "summary" : "multiple",
              "value" : "george.washington@klaviyo.com,thomas.jefferson@klaviyo.com"
            }
          }
        } ],
        "tags" : [ "Lists & Segments" ],
        "responses" : {
          "200" : {
            "description" : "An array of Membership objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/check_membership"
                }
              }
            }
          }
        }
      }
    },
    "/v1/people/exclusions" : {
      "get" : {
        "operationId" : "get-global-exclusions",
        "summary" : "Get Global Exclusions & Unsubscribes",
        "description" : "Returns global exclusions/unsubscribes. Global exclusions are distinct from list exclusions in that these email addresses will not receive any emails from any list. Typically, when someone unsubscribes from a campaign, they are only unsubscribed from that list and are not globally unsubscribed.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "reason",
          "in" : "query",
          "description" : "Filter results based on the reason for someone being excluded. The possible values are `unsubscribed`, `bounced`, `invalid_email`, `reported_spam` and `manually_excluded`. Only a single value may be specified at a time. Defaults to return all profiles regardless of reason.",
          "schema" : {
            "type" : "string",
            "example" : ""
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order to apply to results, either ascending or descending. Valid values are `asc` or `desc`. Defaults to `asc`.",
          "schema" : {
            "type" : "string",
            "example" : "asc",
            "default" : "asc"
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "For pagination, the number of results to return. Default = 500",
          "schema" : {
            "type" : "integer",
            "example" : 500,
            "default" : 500
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "For pagination, which page of results to return. Default = 0",
          "schema" : {
            "type" : "integer",
            "example" : 0,
            "default" : 0
          }
        } ],
        "tags" : [ "Lists & Segments" ],
        "responses" : {
          "200" : {
            "description" : "An array of Exclusion objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/global_exclusion_response_data"
                }
              }
            }
          }
        }
      },
      "post" : {
        "operationId" : "exclude-globally",
        "summary" : "Exclude Profile From All Email",
        "description" : "Marks a person as excluded from all email. This works the same way as manually excluding someone via the excluded people page. Someone who is excluded will no longer receive any campaigns or flow emails. Keep in mind, there is currently no API to un-exclude someone. In order to remove this block, you must manually remove someone from the unsubscribed list.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "example" : "george.washington@klaviyo.com",
                    "default" : "george.washington@klaviyo.com"
                  }
                },
                "required" : [ "email" ]
              }
            }
          }
        },
        "tags" : [ "Lists & Segments" ],
        "responses" : {
          "200" : {
            "description" : "An already_excluded flag that indicates whether this individual was already unsubscribed from all email.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "already_excluded" : {
                      "type" : "boolean",
                      "example" : true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/lists" : {
      "post" : {
        "operationId" : "create-list",
        "summary" : "Create List",
        "description" : "Creates a new list.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "list_name" : {
                    "type" : "string",
                    "example" : "MyNewList",
                    "default" : "MyNewList"
                  }
                },
                "required" : [ "list_name" ]
              }
            }
          }
        },
        "tags" : [ "Lists & Segments" ],
        "responses" : {
          "200" : {
            "description" : "Returns the list_id of the newly created list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "list_id" : {
                      "type" : "string",
                      "example" : "LIST_ID"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "operationId" : "get-lists",
        "summary" : "Get Lists",
        "description" : "Returns a listing of all of the lists in an account.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        } ],
        "tags" : [ "Lists & Segments" ],
        "responses" : {
          "200" : {
            "description" : "Successful requests will include a list of JSON objects containing the list ID and name for each list. Invalid requests will be accompanied by an error message.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "minItems" : 0,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "list_id" : {
                        "type" : "string"
                      },
                      "list_name" : {
                        "type" : "string"
                      }
                    }
                  },
                  "example" : [ {
                    "list_id" : "LIST_ID_1",
                    "list_name" : "MyFirstList"
                  }, {
                    "list_id" : "LIST_ID_2",
                    "list_name" : "MySecondList"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/list/{list_id}" : {
      "get" : {
        "operationId" : "get-list-info",
        "summary" : "Get List Info",
        "description" : "Returns information about a list.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        } ],
        "tags" : [ "Lists & Segments" ],
        "responses" : {
          "200" : {
            "description" : "Successful requests will include a JSON object containing information about the list. Invalid requests will be accompanied by an error message.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "list_name" : {
                      "type" : "string",
                      "example" : "MyFirstList"
                    },
                    "created" : {
                      "type" : "string",
                      "example" : "2018-07-03T13:44:38Z"
                    },
                    "updated" : {
                      "type" : "string",
                      "example" : "2018-08-03T13:44:38Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "operationId" : "update-list-name",
        "summary" : "Update List Name",
        "description" : "Updates a list's name.",
        "parameters" : [ {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "example" : "PRIVATE_KEY",
                    "default" : "PRIVATE_KEY"
                  },
                  "list_name" : {
                    "type" : "string",
                    "example" : "MyRenamedList",
                    "default" : "MyRenamedList"
                  }
                },
                "required" : [ "api_key", "list_name" ]
              }
            }
          }
        },
        "tags" : [ "Lists & Segments" ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200ok"
          }
        }
      },
      "delete" : {
        "operationId" : "delete-list",
        "summary" : "Delete List",
        "description" : "Deletes a list from an account. This is a destructive operation and cannot be undone. It will also remove flow triggers associated with the list.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        } ],
        "tags" : [ "Lists & Segments" ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200ok"
          }
        }
      }
    },
    "/v2/list/{list_id}/subscribe" : {
      "post" : {
        "tags" : [ "Lists & Segments" ],
        "operationId" : "subscribe",
        "summary" : "Subscribe Profiles to List",
        "description" : "Subscribes profiles to a list. Profiles will be single or double opted into the specified list in accordance with that list’s settings. Note: If you have double opt-in turned on, users will not be added to list until they opt-in, and so API will respond with an empy list: `[]`",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "description" : "The profiles that you would like to subscribe. Each object in the list must have either an email or phone number key. You can also provide additional properties as key-value pairs. If you are a GDPR compliant business, you will need to include `$consent` in your API call. `$consent` is a list-type, Klaviyo special property and only accepts some subset of the following: `[\"email\", \"web\", \"sms\", \"directmail\", \"mobile\"]`. If you are updating consent for a phone number or would like to send an opt-in SMS to the profile (for double opt-in lists), include an `sms_consent` key in the profile with a value of `true` or `false`.",
                "properties" : {
                  "profiles" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "additionalProperties" : true
                    },
                    "example" : [ {
                      "email" : "george.washington@klaviyo.com"
                    }, {
                      "phone_number" : "+13239169023",
                      "sms_consent" : true
                    } ],
                    "default" : [ {
                      "email" : "george.washington@klaviyo.com"
                    }, {
                      "phone_number" : "+13239169023",
                      "sms_consent" : true
                    } ]
                  }
                },
                "required" : [ "profiles" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful requests will return with HTTP OK responses. If the list is single opt-in then a list of records containing the email address, phone number, push token, and the corresponding profile ID will also be included. Invalid requests will be accompanied by an error message.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/200ok"
                  }, {
                    "$ref" : "#/components/schemas/list_subscribe_post_response_data"
                  } ]
                },
                "examples" : {
                  "Double Opt-In Success" : {
                    "summary" : "double opt-in success",
                    "value" : [ ]
                  },
                  "Single Opt-In Success" : {
                    "summary" : "single opt-in success",
                    "value" : [ {
                      "id" : "PERSON_ID_1",
                      "email" : "george.washington@klaviyo.com"
                    }, {
                      "id" : "PERSON_ID_2",
                      "phone_number" : "+13239169023"
                    } ]
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Lists & Segments" ],
        "operationId" : "check-subscriptions",
        "summary" : "Check Subscriptions",
        "description" : "Checks if profiles are on a list and not suppressed.",
        "parameters" : [ {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "description" : "\n`emails`, `phone_numbers`, `push_tokens` are all arrays of strings; you can use them to check if profile corresponding to identifier is on the list and not suppressed.\n",
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "description" : "Private API Key",
                    "example" : "PRIVATE_KEY",
                    "default" : "PRIVATE_KEY"
                  },
                  "emails" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "phone_numbers" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "push_tokens" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "api_key" : "PRIVATE_KEY",
                  "emails" : [ "george.washington@klaviyo.com", "john.adams@klaviyo.com" ],
                  "phone_numbers" : [ "+13239169023" ],
                  "push_tokens" : [ "PUSH_TOKEN" ]
                },
                "example" : {
                  "api_key" : "PRIVATE_KEY",
                  "emails" : [ "george.washington@klaviyo.com", "john.adams@klaviyo.com" ],
                  "phone_numbers" : [ "+13239169023" ],
                  "push_tokens" : [ "PUSH_TOKEN" ]
                },
                "required" : [ "api_key" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful requests will include a list of JSON objects corresponding to email addresses, phone numbers, and/or push tokens on the list, their profile IDs, and the date they were added to the list. If an identifier corresponds to a profile that is not on the list or is suppressed then no JSON object will be returned for that profile. If a profile shares multiple provided identifiers (such as an email address and a phone number) only a single profile is returned, not two. Only profiles that have consented to receive SMS will include their phone number in the response. Invalid requests will be accompanied by an error message.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "list_name" : {
                      "type" : "string",
                      "example" : "MyFirstList"
                    },
                    "created" : {
                      "type" : "string",
                      "example" : "2018-07-03T13:44:38Z"
                    },
                    "updated" : {
                      "type" : "string",
                      "example" : "2018-08-03T13:44:38Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Lists & Segments" ],
        "operationId" : "unsubscribe",
        "summary" : "Unsubscribe Profiles From List",
        "description" : "Unsubscribes and removes profiles from a list.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        } ],
        "requestBody" : {
          "description" : "Unsubscribe and remove profiles from a list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "description" : "Profiles is an object containing `emails`, `phone_numbers`, and `push_tokens`. Each is an array of strings. Profiles with corresponding values will be added to this list.",
                "properties" : {
                  "emails" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "phone_numbers" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "push_tokens" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "emails" : [ "george.washington@klaviyo.com", "john.adams@klaviyo.com" ],
                  "phone_numbers" : [ "+13239169023" ],
                  "push_tokens" : [ "PUSH_TOKEN" ]
                },
                "example" : {
                  "emails" : [ "george.washington@klaviyo.com", "john.adams@klaviyo.com" ],
                  "phone_numbers" : [ "+13239169023" ],
                  "push_tokens" : [ "PUSH_TOKEN" ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200ok"
          }
        }
      }
    },
    "/v2/list/{list_id}/members" : {
      "post" : {
        "tags" : [ "Lists & Segments" ],
        "operationId" : "add-members",
        "summary" : "Add Members to a List",
        "description" : "Adds profiles to a list. This endpoint is functionally equivalent to adding profiles to a list via a CSV upload and will immediately add profiles to the list. If you would like to subscribe profiles to a list and use the double opt-in settings for the list, please use the subscribe endpoint.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "description" : "The profiles that you would like to add to the list. Each object in the array must have an `email` or `phone_number`. You can also provide additional properties as key-value pairs.",
                "properties" : {
                  "profiles" : {
                    "type" : "array",
                    "minItems" : 0,
                    "maxItems" : 100,
                    "items" : {
                      "type" : "object",
                      "additionalProperties" : true
                    },
                    "example" : [ {
                      "email" : "george.washington@klaviyo.com"
                    }, {
                      "phone_number" : "+13239169023"
                    } ],
                    "default" : [ {
                      "email" : "george.washington@klaviyo.com"
                    }, {
                      "phone_number" : "+13239169023"
                    } ]
                  }
                },
                "required" : [ "profiles" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful requests will return with HTTP OK responses and a list of records containing the corresponding profile ID, email address, phone number, and push token. Invalid requests will be accompanied by an error message.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "minItems" : 0,
                  "maxItems" : 100,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "email" : {
                        "type" : "string"
                      },
                      "phone_number" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "example" : [ {
                  "id" : "PERSON_ID_1",
                  "email" : "george.washington@klaviyo.com"
                }, {
                  "id" : "PERSON_ID_2",
                  "email" : "thomas.jefferson@klaviyo.com",
                  "phone_number" : "+13239169023"
                } ]
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Lists & Segments" ],
        "operationId" : "list-membership",
        "summary" : "Check if Profiles Are in a Specific List",
        "description" : "Checks if profiles are in a specific list.",
        "parameters" : [ {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        }, {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "emails",
          "in" : "query",
          "description" : "The emails corresponding to the profiles that you would like to check.",
          "schema" : {
            "type" : "array",
            "minItems" : 0,
            "maxItems" : 100,
            "items" : {
              "type" : "string"
            },
            "example" : [ "george.washington@klaviyo.com", "john.adams@klaviyo.com" ],
            "default" : [ "george.washington@klaviyo.com", "john.adams@klaviyo.com" ]
          }
        }, {
          "name" : "phone_numbers",
          "in" : "query",
          "description" : "The phone numbers corresponding to the profiles that you would like to check. Phone numbers must be in E.164 format.",
          "schema" : {
            "type" : "array",
            "minItems" : 0,
            "maxItems" : 100,
            "items" : {
              "type" : "string"
            },
            "example" : [ "+13239169023" ],
            "default" : [ "+13239169023" ]
          }
        }, {
          "name" : "push_tokens",
          "in" : "query",
          "description" : "The push tokens corresponding to the profiles that you would like to check.",
          "schema" : {
            "type" : "array",
            "minItems" : 0,
            "maxItems" : 100,
            "items" : {
              "type" : "string"
            },
            "example" : [ "PUSH_TOKEN" ],
            "default" : [ "PUSH_TOKEN" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful requests will return a list of JSON objects corresponding to email addresses, phone numbers, push tokens, their profile IDs, and the date they were added to the list. If an identifier does not correspond to a profile on the list then no JSON object will be returned for that identifier. Invalid requests will be accompanied by an error message.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "minItems" : 0,
                  "maxItems" : 100,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "email" : {
                        "type" : "string"
                      },
                      "phone_number" : {
                        "type" : "string"
                      },
                      "created" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "example" : [ {
                  "id" : "PERSON_ID_1",
                  "email" : "george.washington@klaviyo.com",
                  "created" : "2018-07-03T13:44:38Z"
                }, {
                  "id" : "PERSON_ID_2",
                  "email" : "thomas.jefferson@klaviyo.com",
                  "phone_number" : "+13239169023",
                  "created" : "2018-07-03T13:44:38Z"
                } ]
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Lists & Segments" ],
        "operationId" : "remove-members",
        "summary" : "Remove Profiles From List",
        "description" : "Removes profiles from a list.",
        "parameters" : [ {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        }, {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "description" : "\nThe profiles that you would like to add to the list. \n\nExample:\n\n{\n  \"emails\":[\"george.washington@klaviyo.com\",\"abraham.lincoln@klaviyo.com\"],\n  \"phone_numbers\":[\"+13239169023\"],\n  \"push_tokens\":[\"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2r\"]\n}\n",
                "properties" : {
                  "emails" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    },
                    "example" : [ "george.washington@klaviyo.com", "abraham.lincoln@klaviyo.com" ],
                    "default" : [ "george.washington@klaviyo.com", "abraham.lincoln@klaviyo.com" ]
                  },
                  "phone_numbers" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    },
                    "example" : [ "+13239169023" ],
                    "default" : [ "+13239169023" ]
                  },
                  "push_tokens" : {
                    "type" : "array",
                    "minItems" : 0,
                    "items" : {
                      "type" : "string"
                    },
                    "example" : [ "PUSH_TOKEN" ],
                    "default" : [ "PUSH_TOKEN" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200ok"
          }
        }
      }
    },
    "/v2/list/{list_id}/exclusions/all" : {
      "get" : {
        "tags" : [ "Lists & Segments" ],
        "operationId" : "get-list-exclusions",
        "summary" : "Get All Exclusions for a List",
        "description" : "Gets all of the emails and phone numbers that have been excluded from a list along with the exclusion reasons and exclusion time. This endpoint uses batching to return the records, so for a large list multiple calls will need to be made to get all of the records.",
        "parameters" : [ {
          "name" : "list_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_ID",
            "default" : "LIST_ID"
          }
        }, {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "marker",
          "in" : "query",
          "description" : "A marker value returned by a previous GET call. Use this to grab the next batch of records.",
          "schema" : {
            "type" : "integer",
            "example" : 123456
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful requests will include a list of JSON objects containing an excluded email, the reason it is marked excluded, and the exclusion date and potentially a marker if there are more records available. If the profile has a valid phone number, it is returned as well, along with the phone_reason for phone numbers with revoked consent. Invalid requests will be accompanied by an error message.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "records" : {
                      "type" : "array",
                      "minItems" : 0,
                      "maxItems" : 100,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          },
                          "email" : {
                            "type" : "string"
                          },
                          "reason" : {
                            "type" : "string"
                          },
                          "phone_number" : {
                            "type" : "string"
                          },
                          "phone_reason" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "marker" : {
                      "type" : "integer",
                      "example" : 123456
                    }
                  }
                },
                "example" : {
                  "records" : [ {
                    "id" : "PERSON_ID_1",
                    "email" : "george.washington@klaviyo.com",
                    "reason" : "Bounced",
                    "created" : "2018-07-03T13:44:38Z"
                  }, {
                    "id" : "PERSON_ID_2",
                    "email" : "thomas.jefferson@klaviyo.com",
                    "reason" : "Unsubscribed",
                    "phone_number" : "+13239169023",
                    "phone_reason" : "Unsubscribed"
                  } ],
                  "marker" : "MARKER"
                }
              }
            }
          }
        }
      }
    },
    "/v2/group/{list_or_segment_id}/members/all" : {
      "get" : {
        "tags" : [ "Lists & Segments" ],
        "operationId" : "get-members",
        "summary" : "Get List and Segment Members",
        "description" : "Gets all of the emails, phone numbers, and push tokens for profiles in a given list or segment",
        "parameters" : [ {
          "name" : "list_or_segment_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "LIST_OR_SEGMENT_ID",
            "default" : "LIST_OR_SEGMENT_ID"
          }
        }, {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "marker",
          "in" : "query",
          "description" : "A marker value returned by a previous GET call. Use this to grab the next batch of records.",
          "schema" : {
            "type" : "integer",
            "example" : 123456
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful requests will include a JSON object containing a list of records containing profile IDs, emails, phone numbers, push tokens, and potentially a marker if there are more records available. Invalid requests will be accompanied by an error message.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "records" : {
                      "type" : "array",
                      "minItems" : 0,
                      "maxItems" : 100,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          },
                          "email" : {
                            "type" : "string"
                          },
                          "phone_number" : {
                            "type" : "string"
                          },
                          "push_token" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "marker" : {
                      "type" : "integer",
                      "example" : 123456
                    }
                  }
                },
                "example" : {
                  "records" : [ {
                    "id" : "PERSON_ID_1",
                    "email" : "george.washington@klaviyo.com"
                  }, {
                    "id" : "PERSON_ID_2",
                    "email" : "thomas.jefferson@klaviyo.com",
                    "phone_number" : "+13239169023",
                    "push_token" : "03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2r"
                  } ],
                  "marker" : 456789
                }
              }
            }
          }
        }
      }
    },
    "/v2/data-privacy/deletion-request" : {
      "post" : {
        "tags" : [ "Data Privacy" ],
        "operationId" : "request-deletion",
        "summary" : "Request a Deletion",
        "description" : "Request a data privacy-compliant deletion for the person record corresponding to an email address, phone number, or person identifier. \n\n**If multiple person records exist for the provided identifier, only one of them will be deleted.**\n\nThe arguments should be sent as content type application/json.         \n\nNote that only **one** identifier (email, phone_number, or person_id) can be specified.\n\nIn addition to your API key, you need to set exactly one of the following parameters: `email`, `phone_number`, `or person_id`, along with the associated `string` value. \n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "minProperties" : 2,
                "maxProperties" : 2,
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "description" : "Private API Key",
                    "default" : "PRIVATE_KEY",
                    "example" : "PRIVATE_KEY"
                  }
                },
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/privacy_email"
                }, {
                  "$ref" : "#/components/schemas/privacy_phone"
                }, {
                  "$ref" : "#/components/schemas/privacy_id"
                } ],
                "required" : [ "api_key" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200ok"
          }
        }
      }
    },
    "/v1/campaigns" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "get-campaigns",
        "summary" : "Get Campaigns",
        "description" : "Returns a list of all the campaigns you've created. The campaigns are returned in reverse sorted order by the time they were created.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "For pagination, which page of results to return. Default = 0",
          "schema" : {
            "type" : "integer",
            "example" : 0,
            "minimum" : 0,
            "default" : 0
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "For pagination, the number of results to return. Max = 100",
          "schema" : {
            "type" : "integer",
            "example" : 100,
            "default" : 50,
            "minimum" : 1,
            "maximum" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A dictionary with a data property that contains an array of all the campaigns. Each entry is a separate Campaign object. If no campaigns exist, the resulting array will be empty. This request should never return an error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "object" : {
                      "type" : "string",
                      "example" : "$list"
                    },
                    "start" : {
                      "type" : "integer",
                      "example" : "0"
                    },
                    "end" : {
                      "type" : "integer",
                      "example" : "0"
                    },
                    "page" : {
                      "type" : "integer",
                      "example" : "0"
                    },
                    "page_size" : {
                      "type" : "integer",
                      "example" : "1"
                    },
                    "total" : {
                      "type" : "integer",
                      "example" : "1"
                    },
                    "data" : {
                      "type" : "array",
                      "minItems" : 0,
                      "items" : {
                        "$ref" : "#/components/schemas/campaign"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "create-campaign",
        "summary" : "Create New Campaign",
        "description" : "Creates a new campaign. The created campaign is a draft and is not automatically sent.",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "example" : "PRIVATE_KEY",
                    "description" : "Private API Key",
                    "default" : "PRIVATE_KEY"
                  },
                  "list_id" : {
                    "type" : "string",
                    "example" : "LIST_ID",
                    "default" : "LIST_ID",
                    "description" : "The list you will send the campaign to."
                  },
                  "template_id" : {
                    "type" : "string",
                    "example" : "TEMPLATE_ID",
                    "default" : "TEMPLATE_ID",
                    "description" : "\nThe template that will define the content of the page. Note: the Email Template is copied when creating this campaign, so future changes to that Email Template will not alter the content of this campaign.\n"
                  },
                  "from_email" : {
                    "type" : "string",
                    "example" : "george.washington@klaviyo.com",
                    "default" : "george.washington@klaviyo.com",
                    "description" : "The email address your email will be sent from and will be used in the `reply-to` header."
                  },
                  "from_name" : {
                    "type" : "string",
                    "example" : "George Washington",
                    "description" : "The name or label associated with the email address you're sending from."
                  },
                  "subject" : {
                    "type" : "string",
                    "example" : "Happy Fourth!",
                    "default" : "Happy Fourth!",
                    "description" : "The email subject of the campaign"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "Campaign Name",
                    "default" : "Campaign Name",
                    "description" : "If not specified, this will default to the subject of the campaign."
                  },
                  "use_smart_sending" : {
                    "type" : "boolean",
                    "example" : true,
                    "description" : "If set, limits the number of emails sent to an individual within a short period. Valid values are `true` and `false`. If not specified, defaults to `true`.",
                    "default" : true
                  },
                  "add_google_analytics" : {
                    "type" : "boolean",
                    "example" : false,
                    "default" : false,
                    "description" : "If specified, adds Google Analytics tracking tags to links. Valid values are `true` and `false`. If not specified, defaults to `false`."
                  }
                },
                "required" : [ "api_key", "list_id", "template_id", "from_email", "subject" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The newly created Campaign object with summary information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/campaign"
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaign/{campaign_id}" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "get-campaign-info",
        "summary" : "Get Campaign Info",
        "description" : "Returns summary information for the campaign specified.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "campaign_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "CAMPAIGN_ID",
            "default" : "CAMPAIGN_ID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The Campaign object with summary information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/campaign"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "update-campaign",
        "summary" : "Update Campaign",
        "description" : "Updates details of a campaign. You can update a campaign's name, subject, from email address, from name, template or list.",
        "parameters" : [ {
          "name" : "campaign_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "CAMPAIGN_ID",
            "default" : "CAMPAIGN_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "example" : "PRIVATE_KEY",
                    "description" : "Private API Key",
                    "default" : "PRIVATE_KEY"
                  },
                  "list_id" : {
                    "type" : "string",
                    "example" : "LIST_ID",
                    "description" : "The list you will send the campaign to."
                  },
                  "template_id" : {
                    "type" : "string",
                    "example" : "TEMPLATE_ID",
                    "description" : "The ID of the Email Template object that will be the content of this campaign. Note the Email Template is copied when creating this campaign, so future changes to that Email Template will not alter the content of this campaign."
                  },
                  "from_email" : {
                    "type" : "string",
                    "example" : "george.washington@klaviyo.com",
                    "description" : "The email address your email will be sent from and will be used in the reply-to header."
                  },
                  "from_name" : {
                    "type" : "string",
                    "example" : "George Washington",
                    "description" : "The name or label associated with the email address you're sending from."
                  },
                  "subject" : {
                    "type" : "string",
                    "example" : "Happy Fourth!",
                    "description" : "The email subject of the campaign"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "Campaign Name",
                    "description" : "A name for this campaign. If not specified, this will default to the subject of the campaign."
                  },
                  "use_smart_sending" : {
                    "type" : "boolean",
                    "example" : true,
                    "description" : "If set, limits the number of emails sent to an individual within a short period. Campaigns initially default to `true`."
                  },
                  "add_google_analytics" : {
                    "type" : "boolean",
                    "example" : false,
                    "description" : "If specified, adds Google Analytics tracking tags to links. Campaigns initially default to `false`."
                  }
                },
                "required" : [ "api_key" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The Campaign object with summary information including updated details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/campaign"
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaign/{campaign_id}/send" : {
      "post" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "send-campaign",
        "summary" : "Send a Campaign Immediately",
        "description" : "Queues a campaign for immediate delivery",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "campaign_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "CAMPAIGN_ID",
            "default" : "CAMPAIGN_ID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A dictionary with a single key status which should be queued.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "queued"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaign/{campaign_id}/schedule" : {
      "post" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "schedule-campaign",
        "summary" : "Schedule a Campaign",
        "description" : "Schedules a campaign for a time in the future",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "campaign_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "CAMPAIGN_ID",
            "default" : "CAMPAIGN_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "send_time" : {
                    "type" : "string",
                    "example" : "2022-01-13 00:00:00",
                    "default" : "2022-01-13 00:00:00",
                    "description" : "\nA timestamp of the format `%Y-%m-%d %H:%M:%S` in the UTC timezone.\n\nEx:\n\n`2022-01-13 00:00:00`\n"
                  }
                },
                "required" : [ "send_time" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A dictionary with a single key status which should be queued.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "queued"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaign/{campaign_id}/cancel" : {
      "post" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "cancel-campaign",
        "summary" : "Cancel a Campaign",
        "description" : "Cancels a campaign send. Marks a campaign as cancelled regardless of it's current status.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "campaign_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "CAMPAIGN_ID",
            "default" : "CAMPAIGN_ID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The Campaign object with summary information including updated details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/campaign"
                },
                "example" : {
                  "object" : "campaign",
                  "id" : "dqQnNW",
                  "name" : "Campaign Name",
                  "subject" : "Company Monthly Newsletter",
                  "from_email" : "george.washington@klaviyo.com",
                  "from_name" : "George Washington",
                  "list_id" : "erRoOX",
                  "template" : {
                    "object" : "email-template",
                    "id" : "TEMPLATE_ID",
                    "html" : "<html><body><p>This is the email content</p></body></html>"
                  },
                  "status" : "cancelled",
                  "sent_at" : null,
                  "created" : "2020-06-14 12:00:00"
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaign/{campaign_id}/clone" : {
      "post" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "clone-campaign",
        "summary" : "Clone a Campaign",
        "description" : "Creates a copy of a campaign. The new campaign starts as a draft.",
        "parameters" : [ {
          "name" : "campaign_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "CAMPAIGN_ID",
            "default" : "CAMPAIGN_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "example" : "Private API Key",
                    "default" : "PRIVATE_KEY"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "Cloned Campaign",
                    "default" : "Cloned Campaign",
                    "description" : "The name for the new campaign. All other properties of the campaign will remain the same. Note, the template for the new campaign will be cloned from the existing template so changes to the existing campaign's content will not alter the content of the new campaign."
                  },
                  "list_id" : {
                    "type" : "string",
                    "example" : "LIST_ID",
                    "default" : "LIST_ID",
                    "description" : "The list you will send the campaign to."
                  }
                },
                "required" : [ "api_key", "name", "list_id" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The new Campaign object with summary information including updated details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/campaign"
                },
                "example" : {
                  "object" : "campaign",
                  "id" : "dqQnNW",
                  "name" : "Cloned Campaign",
                  "subject" : "Company Monthly Newsletter",
                  "from_email" : "george.washington@klaviyo.com",
                  "from_name" : "George Washington",
                  "list_id" : "erRoOX",
                  "template" : {
                    "object" : "email-template",
                    "id" : "TEMPLATE_ID",
                    "html" : "<html><body><p>This is the email content</p></body></html>"
                  },
                  "status" : "draft",
                  "sent_at" : null,
                  "created" : "2020-06-15 12:00:00"
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaign/{campaign_id}/recipients" : {
      "get" : {
        "tags" : [ "Campaigns" ],
        "operationId" : "get-campaign-recipients",
        "summary" : "Get Campaign Recipients",
        "description" : "Returns summary information about email recipients for the campaign specified that includes each recipients email, customer ID, and status.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "campaign_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "CAMPAIGN_ID",
            "default" : "CAMPAIGN_ID"
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "For pagination, the number of results to return. Max = 25,000",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "maximum" : 25000,
            "default" : 5000,
            "example" : 25000
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order to apply to results, either ascending or descending. Valid values are `asc` or `desc`. Defaults to `asc`.",
          "schema" : {
            "type" : "string",
            "example" : "asc",
            "default" : "asc"
          }
        }, {
          "name" : "offset",
          "required" : false,
          "in" : "query",
          "description" : "For pagination, if a response to this endpoint includes a `next_offset`, use that value to get the next page of recipients.",
          "schema" : {
            "type" : "string",
            "example" : "next_offset"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of dictionaries with keys status, email, customer_id and variation_id for each email recipient.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "count" : {
                      "type" : "integer",
                      "example" : 1
                    },
                    "data" : {
                      "type" : "array",
                      "minItems" : 0,
                      "maxItems" : 25000,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "status" : {
                            "type" : "string"
                          },
                          "customer_id" : {
                            "type" : "string"
                          },
                          "email" : {
                            "type" : "string"
                          },
                          "variation_id" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "next_offset" : {
                      "type" : "string",
                      "example" : "Z2VvcmdlLndhc2hpbmd0b25AZXhhbXBsZS5jb20"
                    }
                  }
                },
                "example" : {
                  "count" : 1,
                  "data" : [ {
                    "status" : "Sent",
                    "customer_id" : "dqQnNW",
                    "email" : "abraham.lincoln@klaviyo.com",
                    "variation_id" : null
                  } ],
                  "next_offset" : "dR5g67HJdfbh76RDFsfverf34"
                }
              }
            }
          }
        }
      }
    },
    "/v1/email-templates" : {
      "get" : {
        "tags" : [ "Templates" ],
        "operationId" : "get-templates",
        "summary" : "Get All Templates",
        "description" : "Returns a list of all the email templates you've created. The templates are returned in sorted order by `name`.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all the email templates you've created. The templates are returned in sorted order by name.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "object" : {
                      "type" : "string",
                      "example" : "$list"
                    },
                    "start" : {
                      "type" : "integer",
                      "example" : 0
                    },
                    "end" : {
                      "type" : "integer",
                      "example" : 1
                    },
                    "page" : {
                      "type" : "integer",
                      "example" : 0
                    },
                    "page_size" : {
                      "type" : "integer",
                      "example" : 1
                    },
                    "total" : {
                      "type" : "integer",
                      "example" : 1
                    },
                    "data" : {
                      "type" : "array",
                      "minItems" : 0,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "object" : {
                            "type" : "string",
                            "example" : "email-template"
                          },
                          "id" : {
                            "type" : "string",
                            "example" : "TEMPLATE_ID"
                          },
                          "name" : {
                            "type" : "string",
                            "example" : "Weekly Summary"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Templates" ],
        "operationId" : "create-template",
        "summary" : "Create New Template",
        "description" : "Creates a new email template.",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "example" : "PRIVATE_KEY",
                    "description" : "Private API Key",
                    "default" : "PRIVATE_KEY"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "New Template Name",
                    "default" : "New Template Name",
                    "description" : "The name of the email template."
                  },
                  "html" : {
                    "type" : "string",
                    "example" : "<html><body><p>This is an email for {{ email }}.</p></body></html>",
                    "default" : "<html><body><p>This is an email for {{ email }}.</p></body></html>"
                  }
                },
                "required" : [ "api_key", "name", "html" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The newly created Email Template object with summary information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "object" : {
                      "type" : "string",
                      "example" : "email-template"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : "TEMPLATE_ID"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "New Template Name"
                    },
                    "html" : {
                      "type" : "string",
                      "example" : "<html><body><p>This is an email for {{ email }}.</p></body></html>"
                    },
                    "created" : {
                      "type" : "string",
                      "example" : "2020-06-17 14:00:00"
                    },
                    "updated" : {
                      "type" : "string",
                      "example" : "2020-06-17 14:00:00"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/email-template/{template_id}" : {
      "put" : {
        "tags" : [ "Templates" ],
        "operationId" : "update-template",
        "summary" : "Update Template",
        "description" : "Updates the name and/or HTML content of a template. Only updates imported HTML templates; does not currently update drag & drop templates.",
        "parameters" : [ {
          "name" : "template_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "TEMPLATE_ID",
            "default" : "TEMPLATE_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "example" : "PRIVATE_KEY",
                    "default" : "PRIVATE_KEY"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "New Template Name",
                    "description" : "The new name of the email template."
                  },
                  "html" : {
                    "type" : "string",
                    "example" : "<html><body><p>This is an email for {{ email }}.</p></body></html>",
                    "description" : "The new HTML content for this template."
                  }
                },
                "required" : [ "api_key" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The updated Email Template object with summary information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "object" : {
                      "type" : "string",
                      "example" : "email-template"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : "TEMPLATE_ID"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "New Template Name"
                    },
                    "html" : {
                      "type" : "string",
                      "example" : "<html><body><p>This is an email for {{ email }}.</p></body></html>"
                    },
                    "created" : {
                      "type" : "string",
                      "example" : "2020-06-17 14:00:00"
                    },
                    "updated" : {
                      "type" : "string",
                      "example" : "2020-06-18 14:00:00"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Templates" ],
        "operationId" : "delete-template",
        "summary" : "Delete Template",
        "description" : "Deletes a given template.",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "template_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "TEMPLATE_ID",
            "default" : "TEMPLATE_ID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted Email Template object with summary information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "object" : {
                      "type" : "string",
                      "example" : "email-template"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "New Template Name"
                    },
                    "html" : {
                      "type" : "string",
                      "example" : "<html><body><p>This is an email for {{ email }}.</p></body></html>"
                    },
                    "created" : {
                      "type" : "string",
                      "example" : "2020-06-17 14:00:00"
                    },
                    "updated" : {
                      "type" : "string",
                      "example" : "2020-06-18 14:00:00"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/email-template/{template_id}/clone" : {
      "post" : {
        "tags" : [ "Templates" ],
        "operationId" : "clone-template",
        "summary" : "Clone Template",
        "description" : "Creates a copy of a given template with a new name.",
        "parameters" : [ {
          "name" : "template_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "TEMPLATE_ID",
            "default" : "TEMPLATE_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string",
                    "example" : "PRIVATE_KEY",
                    "default" : "PRIVATE_KEY"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "My Cloned Template",
                    "default" : "My Cloned Template",
                    "description" : "The new name of the email template."
                  }
                },
                "required" : [ "api_key", "name" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The newly created Email Template object with summary information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "object" : {
                      "type" : "string",
                      "example" : "email-template"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : "TEMPLATE_ID"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "My Cloned Template"
                    },
                    "html" : {
                      "type" : "string",
                      "example" : "<html><body><p>This is an email for {{ email }}.</p></body></html>"
                    },
                    "created" : {
                      "type" : "string",
                      "example" : "2020-06-20 14:00:00"
                    },
                    "updated" : {
                      "type" : "string",
                      "example" : "2020-06-20 14:00:00"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/email-template/{template_id}/render" : {
      "post" : {
        "tags" : [ "Templates" ],
        "operationId" : "render-template",
        "summary" : "Render Template",
        "description" : "Renders the specified template with the provided data and return HTML and text versions of the email.",
        "parameters" : [ {
          "name" : "template_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "TEMPLATE_ID",
            "default" : "TEMPLATE_ID"
          }
        }, {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "This is the context your email template will be rendered with. Email templates are rendered with contexts in a similar manner to how Django templates are rendered. This means that nested template variables can be referenced via dot notation and template variables without corresponding context values are treated as falsy and output nothing.",
          "schema" : {
            "type" : "string",
            "example" : "{ \"name\" : \"George Washington\", \"state\" : \"VA\" }",
            "default" : "{ \"name\" : \"George Washington\", \"state\" : \"VA\" }"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The Email Template object with an additional data property that contains both the HTML and text versions of the rendered template.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "object" : {
                      "type" : "string",
                      "example" : "email-template"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : "TEMPLATE_ID"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "My Cloned Template"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "html" : {
                          "type" : "string",
                          "example" : "<html><body><p>This is an email for {{ email }}.</p></body></html>"
                        },
                        "text" : {
                          "type" : "string",
                          "example" : "This is an email for george.washington@klaviyo.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/email-template/{template_id}/send" : {
      "post" : {
        "tags" : [ "Templates" ],
        "operationId" : "send-template",
        "summary" : "Render and Send Template",
        "description" : "Renders the specified template with the provided data and send the contents in an email via the service specified. This API is intended to test templates only, and is rate limited to the following thresholds: 100/hour, 1,000/day.\n\nNOTE: To perform this action, your account first needs to be [verified](https://help.klaviyo.com/hc/en-us/articles/115000628331-About-Account-Verification) by Klaviyo.\n",
        "parameters" : [ {
          "name" : "api_key",
          "required" : true,
          "in" : "query",
          "description" : "Private API Key",
          "schema" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "default" : "PRIVATE_KEY"
          }
        }, {
          "name" : "template_id",
          "required" : true,
          "in" : "path",
          "schema" : {
            "type" : "string",
            "example" : "TEMPLATE_ID",
            "default" : "TEMPLATE_ID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "from_email" : {
                    "type" : "string",
                    "example" : "george.washington@klaviyo.com",
                    "default" : "george.washington@klaviyo.com"
                  },
                  "from_name" : {
                    "type" : "string",
                    "example" : "George Washington",
                    "default" : "George Washington"
                  },
                  "subject" : {
                    "type" : "string",
                    "example" : "Happy Fourth!",
                    "default" : "Happy Fourth!"
                  },
                  "to" : {
                    "description" : "**Mixed**. string, or JSON encoded array of objects with \"email\" and \"name\" keys.\n`abraham.lincoln@klaviyo.com`\nOR\n`[{\"name\":\"Abraham Lincoln\",\"email\":\"abraham.lincoln@klaviyo.com\"}]`\n",
                    "example" : "[{\"name\":\"Abraham Lincoln\",\"email\":\"abraham.lincoln@klaviyo.com\"}]",
                    "default" : "[{\"name\":\"Abraham Lincoln\",\"email\":\"abraham.lincoln@klaviyo.com\"}]"
                  },
                  "context" : {
                    "type" : "string",
                    "example" : "{ \"name\" : \"George Washington\", \"state\" : \"VA\" }",
                    "default" : "{ \"name\" : \"George Washington\", \"state\" : \"VA\" }",
                    "description" : "Optional, JSON encoded hash.\nThis is the context your email template will be rendered with. Email templates are rendered with contexts in a similar manner to how Django templates are rendered. This means that nested template variables can be referenced via dot notation and template variables without corresponding context values are treated as falsy and output nothing.\nex: `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`\n"
                  }
                },
                "required" : [ "from_email", "from_name", "subject", "to" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The Email Template object with an additional data property that contains the status of the message. If successful, the status will be queued.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "object" : {
                      "type" : "string",
                      "example" : "email-template"
                    },
                    "id" : {
                      "type" : "string",
                      "example" : "TEMPLATE_ID"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "My Cloned Template"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "html" : {
                          "type" : "string",
                          "example" : "<html><body><p>This is an email for {{ email }}.</p></body></html>"
                        },
                        "text" : {
                          "type" : "string",
                          "example" : "This is an email for george.washington@klaviyo.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "since_integer" : {
        "type" : "integer"
      },
      "since_string" : {
        "type" : "string"
      },
      "ascending" : {
        "title" : "asc",
        "type" : "string",
        "example" : "asc"
      },
      "descending" : {
        "title" : "desc",
        "type" : "string",
        "example" : "desc"
      },
      "reason_unsubscribed" : {
        "title" : "unsubscribed",
        "type" : "string",
        "example" : "unsubscribed"
      },
      "reason_bounced" : {
        "title" : "bounced",
        "type" : "string",
        "example" : "bounced"
      },
      "reason_invalid_email" : {
        "title" : "invalid_email",
        "type" : "string",
        "example" : "invalid_email"
      },
      "reason_reported_spam" : {
        "title" : "reported_spam",
        "type" : "string",
        "example" : "reported_spam"
      },
      "reason_manually_excluded" : {
        "title" : "manually_excluded",
        "type" : "string",
        "example" : "manually_excluded"
      },
      "string_array" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        }
      },
      "unit_day" : {
        "title" : "day",
        "type" : "string",
        "example" : "day"
      },
      "unit_week" : {
        "title" : "week",
        "type" : "string",
        "example" : "week"
      },
      "unit_month" : {
        "title" : "month",
        "type" : "string",
        "example" : "month"
      },
      "measurement_count" : {
        "title" : "count",
        "type" : "string",
        "example" : "count"
      },
      "measurement_unique" : {
        "title" : "unique",
        "type" : "string",
        "example" : "unique"
      },
      "measurement_value" : {
        "title" : "value",
        "type" : "string",
        "example" : "value"
      },
      "measurement_sum" : {
        "title" : "sum",
        "type" : "string",
        "example" : "sum"
      },
      "privacy_email" : {
        "title" : "Delete Email",
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "example" : "abraham.lincoln@klaviyo.com"
          }
        }
      },
      "privacy_phone" : {
        "title" : "Delete Phone Number",
        "type" : "object",
        "properties" : {
          "phone_number" : {
            "type" : "string",
            "example" : "+13239169023"
          }
        }
      },
      "privacy_id" : {
        "title" : "Delete Person ID",
        "type" : "object",
        "properties" : {
          "person_id" : {
            "type" : "string",
            "example" : "PERSON_ID"
          }
        }
      },
      "deprecated_get_list_response" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "start" : {
            "type" : "integer"
          },
          "end" : {
            "type" : "integer"
          },
          "page" : {
            "type" : "integer"
          },
          "size" : {
            "type" : "integer"
          },
          "total" : {
            "type" : "integer"
          },
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "maxItems" : 100,
            "items" : {
              "type" : "object",
              "properties" : {
                "object" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "string"
                },
                "created" : {
                  "type" : "string"
                },
                "updated" : {
                  "type" : "string"
                },
                "person_count" : {
                  "type" : "integer"
                }
              }
            }
          }
        },
        "example" : {
          "object" : "$list",
          "start" : 0,
          "end" : 1,
          "page" : 0,
          "page_size" : 1,
          "total" : 1,
          "data" : [ {
            "object" : "list",
            "id" : "LIST_ID",
            "name" : "List Name",
            "type" : "standard",
            "created" : "2021-01-13 13:00:00",
            "updated" : "2021-01-14 13:00:00",
            "person_count" : 1000
          } ]
        }
      },
      "delete_email" : {
        "title" : "Delete Email",
        "type" : "object",
        "properties" : {
          "api_key" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "description" : "Private API Key",
            "default" : "PRIVATE_KEY"
          },
          "email" : {
            "type" : "string",
            "example" : "example@klaviyo.com"
          }
        }
      },
      "delete_phone" : {
        "title" : "Delete Phone Number",
        "type" : "object",
        "properties" : {
          "api_key" : {
            "type" : "string",
            "example" : "PRIVATE_KEY",
            "description" : "Private API Key",
            "default" : "PRIVATE_KEY"
          },
          "phone_number" : {
            "type" : "string",
            "example" : "+13239169023",
            "description" : "Phone Number"
          }
        }
      },
      "delete_person" : {
        "title" : "Delete Person",
        "type" : "object",
        "properties" : {
          "api_key" : {
            "type" : "string",
            "example" : "PRIVATE_KEY"
          },
          "person_id" : {
            "type" : "string",
            "example" : "PERSON_ID"
          }
        }
      },
      "identify_payload" : {
        "type" : "object",
        "required" : [ "token", "properties" ],
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "$email" : {
                "type" : "string"
              },
              "$first_name" : {
                "type" : "string"
              },
              "$last_name" : {
                "type" : "string"
              },
              "$phone_number" : {
                "type" : "string"
              },
              "$title" : {
                "type" : "string"
              },
              "$organization" : {
                "type" : "string"
              },
              "$city" : {
                "type" : "string"
              },
              "$region" : {
                "type" : "string"
              },
              "$country" : {
                "type" : "string"
              },
              "$zip" : {
                "type" : "string"
              },
              "$image" : {
                "type" : "string"
              },
              "$consent" : {
                "type" : "string"
              },
              "YOUR_CUSTOM_FIELD" : {
                "oneOf" : [ {
                  "type" : "string"
                }, {
                  "type" : "integer"
                }, {
                  "type" : "number"
                }, {
                  "type" : "boolean"
                }, {
                  "type" : "array"
                } ]
              }
            }
          }
        }
      },
      "track_payload" : {
        "type" : "object",
        "required" : [ "token", "customer_properties", "properties", "time" ],
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "customer_properties" : {
            "type" : "object",
            "properties" : {
              "$email" : {
                "type" : "string"
              },
              "$phone_number" : {
                "type" : "string"
              }
            }
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "$event_id" : {
                "type" : "string"
              },
              "$value" : {
                "type" : "string"
              },
              "YOUR_CUSTOM_FIELD" : {
                "oneOf" : [ {
                  "type" : "string"
                }, {
                  "type" : "integer"
                }, {
                  "type" : "number"
                }, {
                  "type" : "boolean"
                }, {
                  "type" : "array"
                } ]
              }
            }
          },
          "time" : {
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "integer"
            } ]
          }
        }
      },
      "person" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string",
            "example" : "person"
          },
          "id" : {
            "type" : "string",
            "example" : "PERSON_ID"
          },
          "$email" : {
            "type" : "string",
            "example" : "george.washington@klaviyo.com"
          },
          "$first_name" : {
            "type" : "string",
            "example" : "George"
          },
          "$last_name" : {
            "type" : "string",
            "example" : "Washington"
          },
          "$organization" : {
            "type" : "string",
            "example" : "U.S. Government"
          },
          "$title" : {
            "type" : "string",
            "example" : "President"
          },
          "$city" : {
            "type" : "string",
            "example" : "Mount Vernon"
          },
          "$region" : {
            "type" : "string",
            "example" : "Virginia"
          },
          "$zip" : {
            "type" : "string",
            "example" : "22121"
          },
          "$country" : {
            "type" : "string",
            "example" : "United States"
          },
          "$timezone" : {
            "type" : "string",
            "example" : "US/Eastern"
          },
          "$phone_number" : {
            "type" : "string",
            "example" : "+13239169023"
          }
        }
      },
      "metric_export" : {
        "type" : "object",
        "properties" : {
          "metric" : {
            "type" : "object",
            "properties" : {
              "updated" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "created" : {
                "type" : "string"
              },
              "object" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "integration" : {
                "type" : "object",
                "properties" : {
                  "category" : {
                    "type" : "string"
                  },
                  "object" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "end_date" : {
            "type" : "string"
          },
          "measurement" : {
            "type" : "string"
          },
          "where" : {
            "type" : "string"
          },
          "start_date" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          },
          "by" : {
            "type" : "string"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "segment" : {
                  "type" : "string"
                },
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "date" : {
                        "type" : "string"
                      },
                      "values" : {
                        "type" : "array",
                        "items" : {
                          "type" : "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "example" : {
          "metric" : {
            "updated" : "2015-02-12 18:51:41",
            "name" : "Placed Order",
            "created" : "2015-02-12 18:02:34",
            "object" : "metric",
            "id" : "METRIC_ID",
            "integration" : {
              "category" : "eCommerce",
              "object" : "integration",
              "id" : "INTEGRATION_ID",
              "name" : "Shopify"
            }
          },
          "end_date" : "2015-01-31 00:00:00",
          "measurement" : "c",
          "where" : "",
          "start_date" : "2015-01-01 00:00:00",
          "unit" : "weekly",
          "by" : "Accepts Marketing",
          "results" : [ {
            "segment" : "False",
            "data" : [ {
              "date" : "2015-01-05 00:00:00",
              "values" : [ 5 ]
            }, {
              "date" : "2015-01-26 00:00:00",
              "values" : [ 5 ]
            } ]
          }, {
            "segment" : "True",
            "data" : [ {
              "date" : "2015-01-05 00:00:00",
              "values" : [ 2 ]
            } ]
          } ]
        }
      },
      "metric_timeline" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer"
          },
          "object" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "maxItems" : 100,
            "items" : {
              "type" : "object",
              "properties" : {
                "object" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "person" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "$email" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "event_name" : {
            "type" : "string"
          },
          "statistic_id" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer"
          },
          "next" : {
            "type" : "string"
          },
          "event_properties" : {
            "type" : "object",
            "properties" : {
              "$value" : {
                "type" : "number"
              },
              "items" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "type" : "string"
                  }, {
                    "type" : "integer"
                  }, {
                    "type" : "number"
                  }, {
                    "type" : "boolean"
                  }, {
                    "type" : "array"
                  } ]
                }
              }
            }
          }
        },
        "example" : {
          "count" : 1,
          "object" : "$list",
          "data" : [ {
            "object" : "event",
            "id" : "EVENT_ID",
            "person" : {
              "id" : "PERSON_ID",
              "object" : "integration",
              "$email" : "george.washington@klaviyo.com"
            },
            "event_name" : "PlacedOrder",
            "statistic_id" : "STATISTIC_ID",
            "timestamp" : "1400656845",
            "next" : "31268980-edcb-11e3-8001-5b3d8e19a1ac",
            "event_properties" : {
              "$value" : 100,
              "items" : [ {
                "name" : "Boots",
                "sku" : "ITEM_SKU",
                "price" : 50,
                "quantity" : 2
              } ]
            }
          } ]
        }
      },
      "check_membership" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string",
            "example" : "$list"
          },
          "start" : {
            "type" : "integer",
            "example" : 0
          },
          "end" : {
            "type" : "integer",
            "example" : 1
          },
          "page" : {
            "type" : "integer",
            "example" : 0
          },
          "page_size" : {
            "type" : "integer",
            "example" : 1
          },
          "total" : {
            "type" : "integer",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "object" : {
                  "type" : "string",
                  "example" : "person"
                },
                "email" : {
                  "type" : "string",
                  "example" : "george.washington@klaviyo.com"
                },
                "date_added" : {
                  "type" : "string",
                  "example" : "2013-06-10 13:00:00"
                },
                "person" : {
                  "$ref" : "#/components/schemas/person"
                }
              }
            }
          }
        }
      },
      "global_exclusion_response_data" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string",
            "example" : "$list"
          },
          "start" : {
            "type" : "integer",
            "example" : 0
          },
          "end" : {
            "type" : "integer",
            "example" : 1
          },
          "page" : {
            "type" : "integer",
            "example" : 0
          },
          "page_size" : {
            "type" : "integer",
            "example" : 1
          },
          "total" : {
            "type" : "integer",
            "example" : 1
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "object" : {
                  "type" : "string",
                  "example" : "exclusion"
                },
                "email" : {
                  "type" : "string",
                  "example" : "george.washington@klaviyo.com"
                },
                "reason" : {
                  "type" : "string",
                  "example" : "unsubscribed"
                },
                "timestamp" : {
                  "type" : "string",
                  "example" : "2020-06-10 13:00:00"
                }
              }
            }
          }
        }
      },
      "list_subscribe_post_response_data" : {
        "type" : "array",
        "minItems" : 1,
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string"
            },
            "email" : {
              "type" : "string"
            },
            "phone_number" : {
              "type" : "string"
            }
          }
        },
        "example" : [ {
          "id" : "PERSON_ID_1",
          "email" : "george.washington@klaviyo.com"
        }, {
          "id" : "PERSON_ID_2",
          "email" : "thomas.jefferson@klaviyo.com",
          "phone_number" : "+13239169023"
        } ]
      },
      "200ok" : {
        "type" : "object"
      },
      "campaign" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string",
            "example" : "campaign"
          },
          "id" : {
            "type" : "string",
            "example" : "CAMPAIGN_ID"
          },
          "name" : {
            "type" : "string",
            "example" : "Campaign Name"
          },
          "subject" : {
            "type" : "string",
            "example" : "Company Monthly Newsletter"
          },
          "from_email" : {
            "type" : "string",
            "example" : "george.washington@klaviyo.com"
          },
          "from_name" : {
            "type" : "string",
            "example" : "George Washington"
          },
          "list_id" : {
            "type" : "string",
            "example" : "erRoOX"
          },
          "template" : {
            "type" : "object",
            "properties" : {
              "object" : {
                "type" : "string",
                "example" : "email-template"
              },
              "id" : {
                "type" : "string",
                "example" : "TEMPLATE_ID"
              },
              "html" : {
                "type" : "string",
                "example" : "<html><body><p>This is the email content</p></body></html>"
              }
            }
          },
          "status" : {
            "type" : "string",
            "example" : "draft"
          },
          "sent_at" : {
            "type" : "string",
            "example" : "2020-12-02 18:45:04"
          },
          "created" : {
            "type" : "string",
            "example" : "2020-12-01 18:45:04"
          }
        }
      }
    },
    "responses" : {
      "400" : {
        "description" : "Bad request - Request is missing or has a bad parameter, or has invalid API key",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "example" : 429
                },
                "message" : {
                  "type" : "string",
                  "example" : "Bad request - Request is missing or has a bad parameter."
                }
              }
            },
            "examples" : {
              "bad_request" : {
                "summary" : "bad request",
                "value" : {
                  "status" : 400,
                  "message" : "Bad request - Request is missing or has a bad parameter."
                }
              },
              "not_authorized" : {
                "summary" : "not authorized",
                "value" : {
                  "status" : 400,
                  "message" : "Not Authorized - Request is missing or has an invalid API key."
                }
              }
            }
          }
        }
      },
      "404" : {
        "description" : "Not Found - The requested resource doesn't exist.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "example" : 404
                },
                "message" : {
                  "type" : "string",
                  "example" : "Not Found - The requested resource does not exist."
                }
              }
            }
          }
        }
      },
      "429" : {
        "description" : "Rate Limit Reached - Please wait for the designated time period.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "example" : 429
                },
                "message" : {
                  "type" : "string",
                  "example" : "ServerRate limit reached - please wait: 10 seconds"
                }
              }
            }
          }
        }
      },
      "500" : {
        "description" : "Server errors - Something is wrong on Klaviyo's end.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "example" : 500
                },
                "message" : {
                  "type" : "string",
                  "example" : "An internal API server error occurred. Please contact support@klaviyo.com."
                }
              }
            }
          }
        }
      },
      "200ok" : {
        "description" : "OK"
      },
      "200ServerSide" : {
        "description" : "Request reached server",
        "content" : {
          "text/html" : {
            "schema" : {
              "type" : "integer"
            },
            "examples" : {
              "success" : {
                "summary" : "success",
                "value" : 1
              },
              "failure" : {
                "summary" : "failure",
                "value" : 0
              }
            }
          }
        }
      }
    }
  },
  "x-readme" : {
    "samples-languages" : [ "curl", "javascript", "node", "php", "python", "ruby" ]
  }
}
